{
    "appid": "64c9e711-9038-4929-81e3-e198fa6b4666",
    "name": "InfluxDB",
    "description": "This app implements querying <b>InfluxDB</b> using the HTTP API.  InfluxDB is a time series database  meant to be used as a backing store for any use case involving large amounts of timestamped data, including DevOps monitoring, application metrics, IoT sensor data, and real-time analytics",
    "type": "information",
    "product_vendor": "InfluxData",
    "logo": "influxdb.png",
    "product_name": "InfluxData",
    "product_version_regex": ".*",
    "publisher": "Irek Romaniuk",
    "license": "Copyright Irek Romaniuk 2017",
    "app_version": "1.0.1",
    "utctime_updated": "2017-11-30T22:46:21.000000Z",
    "package_name": "phantom_influxdb",
    "main_module": "influxdb_connector.py",
    "min_phantom_version": "3.0.265",
    "app_wizard_version": "1.0.0",
    "configuration": {
        "base_url": {
            "description": "InfluxDB endpoint",
            "data_type": "string",
            "required": true,
            "value_list": [],
            "default": "https://influxdb:8086",
            "order": 0
        },
        "username": {
            "description": "username for authentication",
            "data_type": "string",
            "required": false,
            "value_list": [],
            "default": "admin",
            "order": 1
        },
        "password": {
            "description": "password for authentication",
            "data_type": "password",
            "required": false,
            "value_list": [],
            "default": "",
            "order": 2
        },
        "db": {
            "description": "target database",
            "data_type": "string",
            "required": false,
            "default": "",
            "order": 3
        },
        "verify_cert": {
            "description": "verify certifcate",
            "data_type": "boolean",
            "required": false,
            "default": true,
            "order": 4
        }
    },
    "actions": [
        {
            "action": "test connectivity",
            "identifier": "test_connectivity",
            "description": "Validate the asset configuration for connectivity using supplied configuration",
            "verbose": "",
            "type": "test",
            "read_only": true,
            "parameters": {},
            "output": [],
            "versions": "EQ(*)"
        },
        {
            "action": "run query",
            "identifier": "run_query",
            "description": "Run a query on InfluxDB",
            "verbose": "Use this action to run query on InfluxDB",
            "type": "investigate",
            "read_only": false,
            "parameters": {
                "query": {
                    "description": "query",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "contains": [],
                    "example_values": [
                        "SELECT * FROM \"cpu\" WHERE time > now() - 600s"
                    ],
                    "value_list": [],
                    "default": "",
                    "order": 0
                }
            },
            "output": [
                {
                    "data_path": "action_result.parameter.query",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data.*.results",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data.*.results.*.series",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data.*.results.*.series.*.values",
                    "data_type": "string",
                    "contains": [],
                    "column_name": "values",
                    "column_order": 0
                },
                {
                    "data_path": "action_result.data.*.results.*.series.*.name",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.data.*.results.*.series.*.columns",
                    "data_type": "string",
                    "contains": []
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}